import asyncio

from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery

from config import TOKEN

import KeyBoard as kb
from Texts import direction_1, direction_2, direction_3, direction_4, direction_5, direction_6, direction_7, about_us, full_directions

bot = Bot(token=TOKEN)
dp = Dispatcher()


@dp.message(CommandStart())
async def start_command(message: Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ —Å—é–¥–∞‚û°Ô∏è/help‚¨ÖÔ∏è —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –¥–ª—è —á–µ–≥–æ —Å–æ–∑–¥–∞–Ω —ç—Ç–æ—Ç –±–æ—Ç!", reply_markup=kb.menu_kb1)


@dp.message(Command("help"))
async def help_command(message: Message):
    await message.reply("–î–∞–Ω–Ω—ã–π –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ IT-Cube", reply_markup=kb.inline_kb)

@dp.message(F.text == '–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è')
async def direction(message: Message):
    await message.answer(full_directions, reply_markup=kb.menu_kb2)


#============================================================================

@dp.message(F.text == '–û IT-Cubeüé≤')
async def info_0(message: Message):
    await message.answer(about_us)

#=================||===============================||======================
#=================||=====–ù-–ê-–ü-–†-–ê-–í-–õ-–ï-–ù-–ò-–Ø=====||======================
#=================\/===============================\/======================

@dp.message(F.text == '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Python')
async def info_1(message: Message):
    await message.answer(direction_1, reply_markup=kb.inline_kb1)

@dp.callback_query(F.data == 'info1')
async def clb_info1(callback: CallbackQuery):
    await callback.answer("–ü—Ä–µ–ø–æ–¥–æ–≤–∞—Ç–µ–ª—å: –í–µ–ª–∏–µ–≤ –†–∞—Ñ–∞–µ–ª—å –ò–±—Ä–∞–≥–∏–º–æ–≤–∏—á\n2 –≥—Ä—É–ø–ø—ã; –≤ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø–µ - 12 —á–µ–ª–æ–≤–µ–∫", show_alert=True)

#============================================================================
@dp.message(F.text == 'VR/AR-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞')
async def info_2(message: Message):
    await message.answer(direction_2, reply_markup=kb.inline_kb2)

@dp.callback_query(F.data == 'info2')
async def clb_info2(callback: CallbackQuery):
        await callback.answer("–ü—Ä–µ–ø–æ–¥–æ–≤–∞—Ç–µ–ª—å: –§–ò–û\n2 –≥—Ä—É–ø–ø—ã; –≤ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø–µ - 12 —á–µ–ª–æ–≤–µ–∫", show_alert=True)

# ============================================================================

@dp.message(F.text == '–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞')
async def info_3(message: Message):
    await message.answer(direction_3, reply_markup=kb.inline_kb3)

@dp.callback_query(F.data == 'info3')
async def clb_info3(callback: CallbackQuery):
        await callback.answer("–ü—Ä–µ–ø–æ–¥–æ–≤–∞—Ç–µ–ª—å: –ï–ª–∏–∑–∞—Ä–æ–≤ –î–∞–Ω–∏–∏–ª –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á\n2 –≥—Ä—É–ø–ø—ã; –≤ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø–µ - 12 —á–µ–ª–æ–≤–µ–∫", show_alert=True)

#============================================================================

@dp.message(F.text == '–ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞')
async def info_4(message: Message):
    await message.answer(direction_4, reply_markup=kb.inline_kb4)

@dp.callback_query(F.data == 'info4')
async def clb_info4(callback: CallbackQuery):
        await callback.answer("–ü—Ä–µ–ø–æ–¥–æ–≤–∞—Ç–µ–ª—å: –§–ò–û\n2 –≥—Ä—É–ø–ø—ã; –≤ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø–µ - 12 —á–µ–ª–æ–≤–µ–∫", show_alert=True)

#============================================================================

@dp.message(F.text == '–°–∏—Å—Ç–µ–º–Ω–æ–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ')
async def info_5(message: Message):
    await message.answer(direction_5, reply_markup=kb.inline_kb5)

@dp.callback_query(F.data == 'info5')
async def clb_info5(callback: CallbackQuery):
        await callback.answer("–ü—Ä–µ–ø–æ–¥–æ–≤–∞—Ç–µ–ª—å: –ë–æ–±—Ä–æ–≤—Å–∫–∏–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á\n2 –≥—Ä—É–ø–ø—ã; –≤ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø–µ - 12 —á–µ–ª–æ–≤–µ–∫", show_alert=True)

#============================================================================

@dp.message(F.text == '–ë–µ—Å–ø–∏–ª–æ—Ç–Ω—ã–µ –∞–≤–∏–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã')
async def info_6(message: Message):
    await message.answer(direction_6, reply_markup=kb.inline_kb6)

@dp.callback_query(F.data == 'info6')
async def clb_info6(callback: CallbackQuery):
        await callback.answer("–ü—Ä–µ–ø–æ–¥–æ–≤–∞—Ç–µ–ª—å: –ë—É–∏—Å—Ç–æ–≤ –í–ª–∞–¥–∏—Å–ª–∞–≤ –í–∞–ª–µ—Ä—å–µ–≤–∏—á\n2 –≥—Ä—É–ø–ø—ã; –≤ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø–µ - 12 —á–µ–ª–æ–≤–µ–∫", show_alert=True)

#============================================================================

@dp.message(F.text == '3D-–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ')
async def info_7(message: Message):
    await message.answer(direction_7, reply_markup=kb.inline_kb7)

@dp.callback_query(F.data == 'info7')
async def clb_info7(callback: CallbackQuery):
        await callback.answer("–ü—Ä–µ–ø–æ–¥–æ–≤–∞—Ç–µ–ª—å: –§–ò–û\n2 –≥—Ä—É–ø–ø—ã; –≤ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø–µ - 12 —á–µ–ª–æ–≤–µ–∫", show_alert=True)

#============================================================================

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())